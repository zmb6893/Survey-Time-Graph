{"ast":null,"code":"var _jsxFileName = \"/Users/zoebingham/Projects/time-availability/src/views/Heatmap.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport { selectAll, svg } from 'd3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Heatmap = () => {\n  _s();\n\n  // Create a reference for our svg\n  const Chart = useRef(); // Set the dimensions of the chart svg\n\n  const dimensions = {\n    width: 900,\n    height: 600,\n    margin: {\n      top: 130,\n      left: 50,\n      bottom: 70,\n      right: 50\n    }\n  };\n  const rectSize = 30; // Sample data\n\n  function generateValues() {\n    return Array.from({\n      length: 12\n    }, () => (Math.floor(Math.random() * 100) + 1) / 100);\n  }\n\n  const data = [{\n    day: 'Sun',\n    dayValue: 0,\n    am: generateValues(),\n    pm: generateValues()\n  }, {\n    day: 'Mon',\n    dayValue: 1,\n    am: generateValues(),\n    pm: generateValues()\n  }, {\n    day: 'Tue',\n    dayValue: 2,\n    am: generateValues(),\n    pm: generateValues()\n  }, {\n    day: 'Wed',\n    dayValue: 3,\n    am: generateValues(),\n    pm: generateValues()\n  }, {\n    day: 'Thu',\n    dayValue: 4,\n    am: generateValues(),\n    pm: generateValues()\n  }, {\n    day: 'Fri',\n    dayValue: 5,\n    am: generateValues(),\n    pm: generateValues()\n  }, {\n    day: 'Sat',\n    dayValue: 6,\n    am: generateValues(),\n    pm: generateValues()\n  }];\n  const timeData = ['12:00-1:00', '1:00-2:00', '2:00-3:00', '3:00-4:00', '4:00-5:00', '5:00-6:00', '6:00-7:00', '7:00-8:00', '8:00-9:00', '9:00-10:00', '10:00-11:00', '11:00-12:00'];\n  useEffect(() => {\n    // Define the size and posision of our svg\n    const svg = d3.select(Chart.current).attr('width', dimensions.width).attr('height', dimensions.height).style('background-color', 'black').style('border', '1px solid white'); // Create the x-scale\n\n    const x = d3.scaleLinear().domain([0, data.length]).range([0, dimensions.width]); // Create the y-scale\n\n    const y = d3.scaleLinear().domain([0, data.length]).range([0, dimensions.width]); // Add the labels for the days\n\n    svg.append('g').selectAll('text').data(data).join('text').text(d => `${d.day}`).attr('x', d => x(d.dayValue) + dimensions.margin.left).attr('y', dimensions.height - dimensions.margin.bottom).attr('fill', 'white').style('font-size', 14); // Add the labels for the times\n\n    svg.append('g').selectAll('text').data(timeData).join('text').text(d => `${d}`).attr('x', dimensions.width - dimensions.margin.left).attr('y', d => y(d) + dimensions.margin.top).attr('fill', 'white').style('font-size', 14);\n    let count = 0; // Draw blocks\n\n    data.forEach((day, i) => {\n      // AM\n      console.log(day.am[count % 6].toString());\n      svg.append('g').selectAll('rect').data(day.am).join('rect').attr('x', x(day.dayValue) + dimensions.margin.left).attr('y', (d, j) => j * (rectSize + 2) + dimensions.margin.top).attr('width', rectSize).attr('height', rectSize).attr('fill', 'lime').attr('fill-opacity', d => d.toString()); // PM \n\n      svg.append('g').selectAll('rect').data(day.pm).join('rect').attr('x', x(day.dayValue) + rectSize + 2 + dimensions.margin.left).attr('y', (d, j) => j * (rectSize + 2) + dimensions.margin.top).attr('width', rectSize).attr('height', rectSize).attr('fill', 'lime').attr('fill-opacity', d => d.toString());\n    });\n    count++;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Heatmap \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: Chart\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Heatmap, \"9aC+Ckl0tZ8yU4ymIw35f5GxSXE=\");\n\n_c = Heatmap;\nexport default Heatmap;\n\nvar _c;\n\n$RefreshReg$(_c, \"Heatmap\");","map":{"version":3,"names":["React","useEffect","useRef","d3","selectAll","svg","Heatmap","Chart","dimensions","width","height","margin","top","left","bottom","right","rectSize","generateValues","Array","from","length","Math","floor","random","data","day","dayValue","am","pm","timeData","select","current","attr","style","x","scaleLinear","domain","range","y","append","join","text","d","count","forEach","i","console","log","toString","j"],"sources":["/Users/zoebingham/Projects/time-availability/src/views/Heatmap.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport { selectAll, svg } from 'd3';\n\nconst Heatmap = () => {\n\n    // Create a reference for our svg\n    const Chart = useRef();\n\n    // Set the dimensions of the chart svg\n    const dimensions = {\n        width: 900,\n        height: 600,\n        margin: {top:130, left:50, bottom:70, right:50}\n    }\n\n    const rectSize = 30;\n\n    // Sample data\n    function generateValues() {\n        return Array.from({length:12}, () => (Math.floor(Math.random()*100)+1)/100)\n    }\n\n    const data = [\n        {day: 'Sun', dayValue: 0, am: generateValues(), pm: generateValues()},\n        {day: 'Mon', dayValue: 1, am: generateValues(), pm: generateValues()},\n        {day: 'Tue', dayValue: 2, am: generateValues(), pm: generateValues()},\n        {day: 'Wed', dayValue: 3, am: generateValues(), pm: generateValues()},\n        {day: 'Thu', dayValue: 4, am: generateValues(), pm: generateValues()},\n        {day: 'Fri', dayValue: 5, am: generateValues(), pm: generateValues()},\n        {day: 'Sat', dayValue: 6, am: generateValues(), pm: generateValues()}\n    ]\n\n    const timeData = [\n        '12:00-1:00',\n        '1:00-2:00',\n        '2:00-3:00',\n        '3:00-4:00',\n        '4:00-5:00',\n        '5:00-6:00',\n        '6:00-7:00',\n        '7:00-8:00',\n        '8:00-9:00',\n        '9:00-10:00',\n        '10:00-11:00',\n        '11:00-12:00'\n    ]\n\n    useEffect( () => {\n        // Define the size and posision of our svg\n        const svg = d3.select(Chart.current)\n                        .attr('width', dimensions.width)\n                        .attr('height', dimensions.height)\n                        .style('background-color', 'black')\n                        .style('border', '1px solid white')\n        \n        // Create the x-scale\n        const x = d3.scaleLinear()\n                    .domain([0, data.length])\n                    .range([0, dimensions.width])\n\n        // Create the y-scale\n        const y = d3.scaleLinear()\n                    .domain([0, data.length])\n                    .range([0, dimensions.width])\n\n        // Add the labels for the days\n        svg.append('g')\n            .selectAll('text')\n            .data(data)\n            .join('text')\n            .text( d => `${d.day}`)\n            .attr('x', (d) => x(d.dayValue) + dimensions.margin.left) \n            .attr('y', dimensions.height - dimensions.margin.bottom)\n            .attr('fill', 'white')\n            .style('font-size', 14)\n        \n        // Add the labels for the times\n        svg.append('g')\n            .selectAll('text')\n            .data(timeData)\n            .join('text')\n            .text( d => `${d}`)\n            .attr('x', dimensions.width - dimensions.margin.left) \n            .attr('y', (d) => y(d) + dimensions.margin.top)\n            .attr('fill', 'white')\n            .style('font-size', 14)\n\n        let count = 0;\n        // Draw blocks\n        data.forEach((day, i) => {\n            // AM\n            console.log((day.am[count%6]).toString());\n            svg.append('g')\n                .selectAll('rect')\n                .data(day.am)\n                .join('rect')\n                .attr('x', x(day.dayValue) + dimensions.margin.left)\n                .attr('y', (d,j) => j*(rectSize + 2) + dimensions.margin.top)\n                .attr('width', rectSize)\n                .attr('height', rectSize)\n                .attr('fill', 'lime')\n                .attr('fill-opacity', d => (d).toString())\n            \n            // PM \n            svg.append('g')\n                .selectAll('rect')\n                .data(day.pm)\n                .join('rect')\n                .attr('x', x(day.dayValue) + rectSize + 2 + dimensions.margin.left)\n                .attr('y', (d,j) => j*(rectSize + 2) + dimensions.margin.top)\n                .attr('width', rectSize)\n                .attr('height', rectSize)\n                .attr('fill', 'lime')\n                .attr('fill-opacity', d => (d).toString())\n        })\n        count++;\n    });\n\n    \n\n    return (\n        <div>\n            <h1> Heatmap </h1>\n            <svg ref={Chart}/>\n        </div>\n    );\n}\n\nexport default Heatmap;"],"mappings":"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"},"metadata":{},"sourceType":"module"}