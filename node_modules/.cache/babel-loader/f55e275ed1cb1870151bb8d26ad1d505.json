{"ast":null,"code":"var _jsxFileName = \"/Users/zoebingham/Projects/time-availability/src/views/Heatmap.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport { selectAll, svg } from 'd3';\n/**\n * Creates an svg to represent the time availability based on google form data.\n * @param {*} param0 \n * @returns \n * @author Zoe Bingham\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Heatmap = _ref => {\n  _s();\n\n  let {\n    graphColor,\n    theme,\n    parsedJsonData\n  } = _ref;\n  // Create a reference for our svg\n  const Chart = useRef(); // Set the dimensions of the chart svg\n\n  const dimensions = {\n    width: 700,\n    height: 500,\n    margin: {\n      top: 50,\n      left: 30,\n      bottom: 50,\n      right: 150\n    }\n  };\n  const cellSize = 30; // Sample data\n\n  function generateValues() {\n    return Array.from({\n      length: 12\n    }, () => (Math.floor(Math.random() * 100) + 1) / 100);\n  }\n\n  const data = [[{\n    \"day\": \"Sun\",\n    \"dayValue\": 0,\n    \"am\": [12, 13, 15, 17, 24, 30, 38, 32, 0, 30, 22, 24],\n    \"pm\": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n  }, {\n    \"day\": \"Mon\",\n    \"dayValue\": 1,\n    \"am\": [4, 2, 3, 14, 11, 6, 9, 19, 0, 22, 25, 23],\n    \"pm\": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n  }, {\n    \"day\": \"Tue\",\n    \"dayValue\": 2,\n    \"am\": [9, 10, 17, 17, 25, 17, 9, 17, 0, 29, 21, 22],\n    \"pm\": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n  }, {\n    \"day\": \"Wed\",\n    \"dayValue\": 3,\n    \"am\": [4, 2, 3, 10, 12, 5, 8, 19, 0, 23, 27, 23],\n    \"pm\": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n  }, {\n    \"day\": \"Thu\",\n    \"dayValue\": 4,\n    \"am\": [9, 7, 17, 17, 25, 17, 10, 21, 0, 31, 27, 25],\n    \"pm\": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n  }, {\n    \"day\": \"Fri\",\n    \"dayValue\": 5,\n    \"am\": [2, 0, 3, 10, 12, 6, 12, 22, 0, 32, 31, 26],\n    \"pm\": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n  }, {\n    \"day\": \"Sat\",\n    \"dayValue\": 6,\n    \"am\": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    \"pm\": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n  }]];\n  const timeData = [{\n    time: '12:00-1:00',\n    timeValue: 0\n  }, {\n    time: '1:00-2:00',\n    timeValue: 1\n  }, {\n    time: '2:00-3:00',\n    timeValue: 2\n  }, {\n    time: '3:00-4:00',\n    timeValue: 3\n  }, {\n    time: '4:00-5:00',\n    timeValue: 4\n  }, {\n    time: '5:00-6:00',\n    timeValue: 5\n  }, {\n    time: '6:00-7:00',\n    timeValue: 6\n  }, {\n    time: '7:00-8:00',\n    timeValue: 7\n  }, {\n    time: '8:00-9:00',\n    timeValue: 8\n  }, {\n    time: '9:00-10:00',\n    timeValue: 9\n  }, {\n    time: '10:00-11:00',\n    timeValue: 10\n  }, {\n    time: '11:00-12:00',\n    timeValue: 11\n  }];\n  useEffect(() => {\n    // Define the size and posision of our svg\n    const svg = d3.select(Chart.current).attr('width', dimensions.width).attr('height', dimensions.height).style('background-color', theme.backgroundColor).style('border', theme.border); // Create the x-scale\n\n    const x = d3.scaleLinear().domain([0, data.length]).range([0, dimensions.width - dimensions.margin.right]); // Create the y-scale\n\n    const y = d3.scaleLinear().domain([0, timeData.length]).range([0, dimensions.height - dimensions.margin.top - dimensions.margin.bottom]); // Add the labels for the days\n\n    svg.append('g').selectAll('text').data(data).join('text').text(d => `${d.day}`).attr('x', d => x(d.dayValue) + 20 + dimensions.margin.left + 100).attr('y', dimensions.height - dimensions.margin.bottom).attr('fill', theme.textColor); // Add the labels for the times\n\n    svg.append('g').selectAll('text').data(timeData).join('text').text(d => `${d.time}`).attr('x', dimensions.margin.left).attr('y', d => y(d.timeValue) + dimensions.margin.top + 15).attr('fill', theme.textColor); // Draw blocks\n\n    data.forEach((day, i) => {\n      // Clean off previous color. This is necessary because the colors would stack up on each other when the graphcolor changed.\n      // AM\n      svg.append('g').selectAll('rect').data(day[\"am\"]).join('rect').attr('x', x(day[\"dayValue\"]) + 5 + dimensions.margin.left + 100).attr('y', (d, j) => j * (cellSize + 2) + dimensions.margin.top).attr('width', cellSize).attr('height', cellSize).attr('fill', theme.backgroundColor).attr('fill-opacity', 1); // PM \n\n      svg.append('g').selectAll('rect').data(day[\"pm\"]).join('rect').attr('x', x(day[\"dayValue\"]) + cellSize + 7 + dimensions.margin.left + 100).attr('y', (d, j) => j * (cellSize + 2) + dimensions.margin.top).attr('width', cellSize).attr('height', cellSize).attr('fill', theme.backgroundColor).attr('fill-opacity', 1); // Repaint\n      // AM\n\n      svg.append('g').selectAll('rect').data(day[\"am\"]).join('rect').attr('x', x(day[\"dayValue\"]) + 5 + dimensions.margin.left + 100).attr('y', (d, j) => j * (cellSize + 2) + dimensions.margin.top).attr('width', cellSize).attr('height', cellSize).attr('fill', graphColor).attr('fill-opacity', d => d.toString()); // PM \n\n      svg.append('g').selectAll('rect').data(day[\"pm\"]).join('rect').attr('x', x(day[\"dayValue\"]) + cellSize + 7 + dimensions.margin.left + 100).attr('y', (d, j) => j * (cellSize + 2) + dimensions.margin.top).attr('width', cellSize).attr('height', cellSize).attr('fill', graphColor).attr('fill-opacity', d => d.toString());\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \" Best Time Availability \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: Chart\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"How to read the graph: The darkest hues indicate the best meeting times, while the lighter hues indicate less optimal meeting times.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"**Note: Left side of each day is AM and right side is PM**\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Heatmap, \"9aC+Ckl0tZ8yU4ymIw35f5GxSXE=\");\n\n_c = Heatmap;\nexport default Heatmap;\n\nvar _c;\n\n$RefreshReg$(_c, \"Heatmap\");","map":{"version":3,"names":["React","useEffect","useRef","d3","selectAll","svg","Heatmap","graphColor","theme","parsedJsonData","Chart","dimensions","width","height","margin","top","left","bottom","right","cellSize","generateValues","Array","from","length","Math","floor","random","data","timeData","time","timeValue","select","current","attr","style","backgroundColor","border","x","scaleLinear","domain","range","y","append","join","text","d","day","dayValue","textColor","forEach","i","j","toString"],"sources":["/Users/zoebingham/Projects/time-availability/src/views/Heatmap.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport { selectAll, svg } from 'd3';\n\n/**\n * Creates an svg to represent the time availability based on google form data.\n * @param {*} param0 \n * @returns \n * @author Zoe Bingham\n */\nconst Heatmap = ({graphColor, theme, parsedJsonData}) => {\n\n    // Create a reference for our svg\n    const Chart = useRef();\n\n    // Set the dimensions of the chart svg\n    const dimensions = {\n        width: 700,\n        height: 500,\n        margin: {top:50, left:30, bottom:50, right:150}\n    }\n\n    const cellSize = 30;\n\n    // Sample data\n    function generateValues() {\n        return Array.from({length:12}, () => (Math.floor(Math.random()*100)+1)/100)\n    }\n\n    const data = [\n        [\n            {\"day\":\"Sun\",\"dayValue\":0,\"am\":[12,13,15,17,24,30,38,32,0,30,22,24],\"pm\":[0,0,0,0,0,0,0,0,0,0,0,0]},\n            {\"day\":\"Mon\",\"dayValue\":1,\"am\":[4,2,3,14,11,6,9,19,0,22,25,23],\"pm\":[0,0,0,0,0,0,0,0,0,0,0,0]},\n            {\"day\":\"Tue\",\"dayValue\":2,\"am\":[9,10,17,17,25,17,9,17,0,29,21,22],\"pm\":[0,0,0,0,0,0,0,0,0,0,0,0]},\n            {\"day\":\"Wed\",\"dayValue\":3,\"am\":[4,2,3,10,12,5,8,19,0,23,27,23],\"pm\":[0,0,0,0,0,0,0,0,0,0,0,0]},\n            {\"day\":\"Thu\",\"dayValue\":4,\"am\":[9,7,17,17,25,17,10,21,0,31,27,25],\"pm\":[0,0,0,0,0,0,0,0,0,0,0,0]},\n            {\"day\":\"Fri\",\"dayValue\":5,\"am\":[2,0,3,10,12,6,12,22,0,32,31,26],\"pm\":[0,0,0,0,0,0,0,0,0,0,0,0]},\n            {\"day\":\"Sat\",\"dayValue\":6,\"am\":[0,0,0,0,0,0,0,0,0,0,0,0],\"pm\":[0,0,0,0,0,0,0,0,0,0,0,0]}]\n    ]\n\n\n    const timeData = [\n        {time: '12:00-1:00', timeValue: 0},\n        {time: '1:00-2:00', timeValue: 1},\n        {time: '2:00-3:00', timeValue: 2},\n        {time: '3:00-4:00', timeValue: 3},\n        {time: '4:00-5:00', timeValue: 4},\n        {time: '5:00-6:00', timeValue: 5},\n        {time: '6:00-7:00', timeValue: 6},\n        {time: '7:00-8:00', timeValue: 7},\n        {time: '8:00-9:00', timeValue: 8},\n        {time: '9:00-10:00', timeValue: 9},\n        {time: '10:00-11:00', timeValue: 10},\n        {time: '11:00-12:00', timeValue: 11}\n    ]\n\n    useEffect( () => {\n        // Define the size and posision of our svg\n        const svg = d3.select(Chart.current)\n                        .attr('width', dimensions.width)\n                        .attr('height', dimensions.height)\n                        .style('background-color', theme.backgroundColor)\n                        .style('border', theme.border)\n        \n        // Create the x-scale\n        const x = d3.scaleLinear()\n                    .domain([0, data.length])\n                    .range([0, dimensions.width - dimensions.margin.right])\n\n        // Create the y-scale\n        const y = d3.scaleLinear()\n                    .domain([0, timeData.length])\n                    .range([0, dimensions.height-dimensions.margin.top-dimensions.margin.bottom])\n\n        // Add the labels for the days\n        svg.append('g')\n            .selectAll('text')\n            .data(data)\n            .join('text')\n            .text( d => `${d.day}`)\n            .attr('x', (d) => x(d.dayValue) + 20 + dimensions.margin.left + 100) \n            .attr('y', dimensions.height - dimensions.margin.bottom)\n            .attr('fill', theme.textColor)\n        \n        // Add the labels for the times\n        svg.append('g')\n            .selectAll('text')\n            .data(timeData)\n            .join('text')\n            .text( d => `${d.time}`)\n            .attr('x', dimensions.margin.left) \n            .attr('y', (d) => y(d.timeValue) + dimensions.margin.top + 15)\n            .attr('fill', theme.textColor)\n\n        // Draw blocks\n        data.forEach((day, i) => {\n\n            // Clean off previous color. This is necessary because the colors would stack up on each other when the graphcolor changed.\n            // AM\n            svg.append('g')\n                .selectAll('rect')\n                .data(day[\"am\"])\n                .join('rect')\n                .attr('x', x(day[\"dayValue\"]) + 5 + dimensions.margin.left + 100)\n                .attr('y', (d,j) => j*(cellSize + 2) + dimensions.margin.top)\n                .attr('width', cellSize)\n                .attr('height', cellSize)\n                .attr('fill', theme.backgroundColor)\n                .attr('fill-opacity', 1)\n            \n            // PM \n            svg.append('g')\n                .selectAll('rect')\n                .data(day[\"pm\"])\n                .join('rect')\n                .attr('x', x(day[\"dayValue\"]) + cellSize + 7 + dimensions.margin.left + 100)\n                .attr('y', (d,j) => j*(cellSize + 2) + dimensions.margin.top)\n                .attr('width', cellSize)\n                .attr('height', cellSize)\n                .attr('fill', theme.backgroundColor)\n                .attr('fill-opacity', 1)\n\n            // Repaint\n            // AM\n            svg.append('g')\n                .selectAll('rect')\n                .data(day[\"am\"])\n                .join('rect')\n                .attr('x', x(day[\"dayValue\"]) + 5 + dimensions.margin.left + 100)\n                .attr('y', (d,j) => j*(cellSize + 2) + dimensions.margin.top)\n                .attr('width', cellSize)\n                .attr('height', cellSize)\n                .attr('fill', graphColor)\n                .attr('fill-opacity', d => (d).toString())\n            \n            // PM \n            svg.append('g')\n                .selectAll('rect')\n                .data(day[\"pm\"])\n                .join('rect')\n                .attr('x', x(day[\"dayValue\"]) + cellSize + 7 + dimensions.margin.left + 100)\n                .attr('y', (d,j) => j*(cellSize + 2) + dimensions.margin.top)\n                .attr('width', cellSize)\n                .attr('height', cellSize)\n                .attr('fill', graphColor)\n                .attr('fill-opacity', d => (d).toString())\n        })\n    });\n\n    \n\n    return (\n        <div>\n            <h2> Best Time Availability </h2>\n            <svg ref={Chart}/>\n            <p>How to read the graph: The darkest hues indicate the best meeting times, while the lighter hues indicate less optimal meeting times.</p>\n            <p>**Note: Left side of each day is AM and right side is PM**</p>\n        </div>\n    );\n}\n\nexport default Heatmap;"],"mappings":"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"},"metadata":{},"sourceType":"module"}